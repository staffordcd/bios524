weight[Time==c(0, 2, 4, 6, 8, 10, 12, 14)]
weight[Time==c(0, 2, 4, 6, 8, 10, 12)]
weight[Time==c(0, 2, 4, 6, 8, 10)]
weight[Time==c(0, 2, 4, 6, 8)]
weight[Time==c(0, 2, 4, 6)]
weight[Time==c(0, 2, 4)]
weight[Time==c(0, 2)]
weight[Time==c(2, 4)]
weight[Time==4]
weight[Time==c(2,4)]
?each
weight[(Time == 0 | Time == 2)]
weight[(Time == 0 | Time == 2 | Time == 4)]
weight[(Time == 0 | Time == 2 | Time == 4 | Time == 6)]
length(weight[(Time == 0 | Time == 2 | Time == 4 | Time == 6)])
length(weight[(Time == 0 | Time == 2 | Time == 4 | Time == 6) & (Diet==1)])
78/12
length(weight[(Time == 0 | Time == 2 | Time == 4) & (Diet==1)])
length(weight[(Time == 0 | Time == 2 | Time == 4)])
weight[(Diet == 1) & (Time == 0)]
mean(weight[Time==i]
mean(weight[Time==1]
)
mean(weight[Time==0])
plot(weight~Time, data=subset(ChickWeight, Diet==1), pch=9)
for(i in time_points)
{
lines(x=i, y=mean(weight[Time==i & Diet == 1]), pch=15, col="red")
}
plot(weight~Time, data=subset(ChickWeight, Diet==1), pch=9)
for(i in time_points)
{
lines(x=i, y=mean(weight[(Time==i) & (Diet == 1)]), pch=15, col="red")
}
for(i in time_points)
{
lines(x=i, y=mean(weight[(Time==i) & (Diet == 1)]), pch=15, col="red")
}
for(i in time_points)
{
print(=mean(weight[(Time==i) & (Diet == 1)]))
}
for(i in time_points)
{
print(mean(weight[(Time==i) & (Diet == 1)]))
}
mean_wt <- for(i in time_points)
{
print(mean(weight[(Time==i) & (Diet == 1)]))
}
mean_wt <- for(i in time_points)
{
(mean(weight[(Time==i) & (Diet == 1)]))
}
fix(mean_wt)
fix(mean_wt)
colMeans(weight)
colMeans(ChickWeight)
colMeans(x=weight)
weight
plot(weight~Time, data=subset(ChickWeight, Diet==1), pch=9)
for(i in time_points)
{
points(x=i, y=mean(weight[(Time==i) & (Diet == 1)]), pch=15, col="red")
}
?lines
lines(x=time_points)
lines(x=time_points, type="l")
xspline
?xspline
mean_wt <- data.frame()
View(mean_wt)
View(mean_wt)
View(mean_wt)
lines(c(mean(weight[Diet==1]))
)
lines(c(mean(weight[Diet==1])), type="o")
c(mean(weight[Diet==1]))
c(mean(weight[Diet==1]) by )
?by
c(mean(weight[Diet==1] & Time==c(time_points)))
c(mean(weight[Diet==1] & Time==c(0,2,4)))
c(mean(weight[Diet==1] & Time==c(0,2)))
lowess()
lowess(time_points)
lines(lowess(time_points), color="blue")
lines(lowess(time_points), col="blue")
lines(lowess(time_points), col="blue")
lines(lowess(time_points), col="blue")
lines(lowess(time_points), col="blue")
lines(lowess(time_points), col="blue")
lowess(time_points)
lowess(weight[Time==0 & Diet == 1])
lines(lowess(weight[Time==0 & Diet == 1]))
?lowess
segments(0, y=mean(weight[(Time==0) & (Diet ==1)]), 2, y=mean(weight[(Time==0) & (Diet ==1)]))
segments(0, y=mean(weight[(Time==0) & (Diet ==1)]), 2, y=mean(weight[(Time==2) & (Diet ==1)]))
mean(weight[(Time==0) & (Diet ==1)])
segments(0, y=(mean(weight[(Time==0) & (Diet ==1)])), 2, y=mean(weight[(Time==2) & (Diet ==1)]))
time_points
lines(x=time_points)
lines(x=time_points, type="o")
c(time_points)
lines(x=c(time_points), type="o")
plot(weight~Time, data=subset(ChickWeight, Diet==1), pch=9)
lines(x=c(time_points), type="o")
lines(x=c(time_points), y=c(41type="o")
colMeans(ChickWeight)
?colmeans
?comMeans
?colMeans
colMeans(weight)
colMeans(x=weight)
colMeans(x=weight[Time==0])
colMeans(subset(ChickWeight, Diet == 1, select=Time))
weight[Time==0]
mean_wts <- c(mean(weight[Time==0]), mean(weight[Time==2]), mean(weight[Time==4]))
mean_wts
x_tmp <- time_points[1,3]
x_tmp <- time_points(1,3)
x_tmp <- time_points[1:3]
x_tmp
lines=(x=x_tmp, y=mean_wts, col="red", lty="dotted")
lines(x=x_tmp, y=mean_wts, col="red", lty="dotted")
lines(x=x_tmp, y=mean_wts, col="red", lty="dotted", type="o")
ls(mean*)
ls()
rm(mean_wt)
rm(mean_wts)
for(i in time_points)
{
points(x=i, y=mean(weight[(Time==i) & (Diet == 1)]), pch=15, col="red")
append(mean_wts, y)
}
plot(weight~Time, data=subset(ChickWeight, Diet==1), pch=9)
mean_wts <- 0
for(i in time_points)
{
points(x=i, y=mean(weight[(Time==i) & (Diet == 1)]), pch=15, col="red")
append(mean_wts, y)
}
plot(weight~Time, data=subset(ChickWeight, Diet==1), pch=9)
mean_wts <- 0
for(i in time_points)
{
y_coord <- mean(weight[(Time==i) & (Diet == 1)])
points(x=i, y=y_coord, pch=15, col="red")
append(mean_wts, y_coord )
}
plot(weight~Time, data=subset(ChickWeight, Diet==1), pch=9)
mean_wts <- c(0)
for(i in time_points)
{
y_coord <- mean(weight[(Time==i) & (Diet == 1)])
points(x=i, y=y_coord, pch=15, col="red")
append(mean_wts, y_coord )
}
mean_wts
#points(x=c(time_points), y=rep(colMeans(subset(ChickWeight, Diet==1, select=Time)), times=length(time_points)),pch=3, col="red")
plot(weight~Time, data=subset(ChickWeight, Diet==1), pch=9)
mean_wts = NULL
for(i in time_points)
{
y_coord <- mean(weight[(Time==i) & (Diet == 1)])
points(x=i, y=y_coord, pch=15, col="red")
mean_wts <- c(mean_wts, y_coord)
}
fix(mean_wts)
lines(x=time_points, y=mean_wts, type="o", pch=15)
lines(x=time_points, y=mean_wts, type="o", pch=15, col="red")
plot(weight~Time, data=subset(ChickWeight, Diet==1), pch=3)
?plot
plot(weight~Time, data=subset(ChickWeight, Diet==1), pch=4)
lines(x=time_points, y=mean_wts, type="o", pch=15, col="red")
data.table
aggregate
?aggregate
aggregate(ChickWeight)
aggregate(ChickWeight, by=Diet)
aggregate(ChickWeight, by=Diet, FUN=summary())
aggregate(ChickWeight, by=Diet, FUN="mean")
aggregate(ChickWeight, by=c(Diet), FUN="mean")
aggregate(weight~Diet, data=ChickWeight, mean)
aggregate(weight~Diet, data=ChickWeight)
aggregate(weight~Diet, data=ChickWeight, fivenum)
aggregate(weight~Diet, data=ChickWeight, mean)
aggregate(weight~Diet*Time, data=ChickWeight, mean)
aggregate(weight~Diet==1*Time, data=ChickWeight, mean)
aggregate(weight~Diet*Time, data=ChickWeight[Diet==1], mean)
aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==1]), mean)
ChickWeight{Diet==1}
ChickWeight[Diet==1]
names(ChickWeight)
ChickWeight[Diet]
ChickWeight[Diet==1]
ChickWeight[Diet==1,]
ChickWeight[Diet==1,weight]
ChickWeight[Diet==1,]
ChickWeight[Diet==1,]$weight
ChickWeight[Diet==1,][,weight]
ChickWeight[Diet==1,][weight]
ChickWeight[Diet==1,][1,]
ChickWeight[Diet==1,][,1]
ChickWeight[Diet==1,]$weight
aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==1,]), mean)
aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==1,]), mean)
ag_data  <- aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==1,]), mean)
ag_data
names(ag_data)
for(i in Diet)
{
aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)
#y_coord <- mean(weight[(Time==i) & (Diet == 1)])
#points(x=i, y=y_coord, pch=15, col="red")
#mean_wts <- c(mean_wts, y_coord)
}
for(i in Diet)
{
print(aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean))
#y_coord <- mean(weight[(Time==i) & (Diet == 1)])
#points(x=i, y=y_coord, pch=15, col="red")
#mean_wts <- c(mean_wts, y_coord)
}
Diet
for(i in levels(Diet))
{
print(aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean))
#y_coord <- mean(weight[(Time==i) & (Diet == 1)])
#points(x=i, y=y_coord, pch=15, col="red")
#mean_wts <- c(mean_wts, y_coord)
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3)
lines(aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean))
}
aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==1,]), mean
)
aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==1,]), mean)[3,]
aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==1,]), mean)[,3]
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3)
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3]
lines(x_vals, y_vals, type="o", col="red")
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3)
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
# load in Chick data
data(ChickWeight)
# set up canvas; I like mine to go left to right, so do it byrow
layout(matrix(nrow=2, ncol=2, data=1:4, byrow=TRUE))
layout.show(4)
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3)
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3, xlab="Time", ylab="Weight")
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3, xlab="Time", ylab="Weight", main="Chick Weight")
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3, col=i,
xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3, col=i+4,
xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3, col=(i+4),
xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3, col=c("black", "brown", "darkgreen", "blue"),
xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3, col=i,
xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=rep(c("black", "brown", "darkgreen", "blue"), times=length(time_points)),
xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=rep(c("black", "brown", "darkgreen", "blue"), each=length(time_points)),
xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red")
}
length(time_points)
rep(c("black", "brown", "darkgreen", "blue"), each=length(time_points))
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i,
xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", lty="dashed", lwd=3)
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", lwd=3)
}
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", lwd=2)
}
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", lwd=1)
}
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", pch=5)
}
?pch
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", pch=18)
}
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", pch=18)
legend("topleft", legend=c("Measurement mean"), col=c("red"), lty="solid", pch=18)
}
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", pch=18)
legend("topleft", legend=c("Time mean"), col=c("red"), lty="o", pch=18)
}
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", pch=18)
legend("topleft", legend=c("Time mean"), col=c("red"), lty="solid", pch=18)
}
# load in Chick data
data(ChickWeight)
# set up canvas; I like mine to go left to right, so do it byrow
layout(matrix(nrow=2, ncol=2, data=1:4, byrow=TRUE))
layout.show(4)
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", pch=18)
legend("topleft", legend=c("Time mean"), col=c("red"), lty="solid", pch=18)
}
# load in Chick data
data(ChickWeight)
# set up canvas; I like mine to go left to right, so do it byrow
layout(matrix(nrow=2, ncol=2, data=1:4, byrow=TRUE))
layout.show(4)
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", pch=18)
legend("topleft", legend=c("Time mean"), col=c("red"), lty="solid", pch=18)
}
# load in Chick data
data(ChickWeight)
# set up canvas; I like mine to go left to right, so do it byrow
layout(matrix(nrow=2, ncol=2, data=1:4, byrow=TRUE))
layout.show(4)
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", pch=18)
legend("topleft", legend=c("Time mean"), col=c("red"), lty="solid", pch=18)
}
# load in Chick data
data(ChickWeight)
# set up canvas; I like mine to go left to right, so do it byrow
layout(matrix(nrow=2, ncol=2, data=1:4, byrow=TRUE))
layout.show(4)
# plots away!
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
x_vals <- time_points
y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x_vals, y_vals, type="o", col="red", pch=18)
legend("topleft", legend=c("Time mean"), col=c("red"), lty="solid", pch=18)
}
# plots away! create 4 plots, 1 for each group of chicks by diet
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
#x_vals <- time_points
#y_vals <- (aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3])
lines(x=time_points, aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3], type="o", col="red", pch=18)
legend("topleft", legend=c("Time mean"), col=c("red"), lty="solid", pch=18)
}
# plots away! create 4 plots, 1 for each group of chicks by diet
for(i in levels(Diet))
{
plot(weight~Time, data=subset(ChickWeight, Diet==i), pch=3,
col=i, xlab="Time", ylab="Weight", main=paste("Diet ", i))
# do an overlay plot where the dot indicates the mean weight of chicks at that measurement time
lines(x=time_points, aggregate(weight~Diet*Time, data=subset(ChickWeight[Diet==i,]), mean)[,3], type="o", col="red", pch=18)
# throw a legend on there, because I am classy like that.
legend("topleft", legend=c("Time mean"), col=c("red"), lty="solid", pch=18)
}
